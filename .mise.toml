[env]
_.python.venv = ".venv"

[vars]
cmd_name = "XFwder"
build_dir = "build"
version = "v0.1.0"

[tasks.install-dev-tools]
description = "Install dev tools"
run = "uv pip install pre-commit-uv"

[tasks.pre-commit]
description = "Run pre-commit with uv"
run = "uv run pre-commit"

[tasks.clean]
description = "Clean workspace"
run = [
    "rm -rf {{vars.build_dir}}/*",
]

[tasks.build]
description = "Build Application bundle"
alias = "b"
depends = ["clean"]
run = [
    "mkdir -p {{vars.build_dir}}/{{vars.cmd_name}}.app/Contents/MacOS {{vars.build_dir}}/{{vars.cmd_name}}.app/Contents/Resources",
    "go build -o {{vars.build_dir}}/{{vars.cmd_name}}.app/Contents/MacOS/{{vars.cmd_name}} -ldflags \"-X 'main.CmdName={{vars.cmd_name}}'\"",
    "plutil -convert binary1 info.json -o {{vars.build_dir}}/{{vars.cmd_name}}.app/Contents/Info.plist",
    "echo \"{{vars.version}}\" > {{vars.build_dir}}/{{vars.cmd_name}}.app/Contents/Resources/version"
]

[tasks.package]
description = "Create a ZIP archive of the application bundle"
depends = ["build"]
run = "zip -r {{vars.cmd_name}}.zip {{vars.cmd_name}}.app"
dir = "{{vars.build_dir}}"

[tasks.example]
depends = ["build"]
run = "uv run example.py"

[tasks.logs]
description = "Read the log file"
run = "cat ~/Library/Logs/{{vars.cmd_name}}/{{vars.cmd_name}}.log"
